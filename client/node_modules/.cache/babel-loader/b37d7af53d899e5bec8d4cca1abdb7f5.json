{"ast":null,"code":"var _jsxFileName = \"/mnt/d/projects/internal-projects/web-health-check/client/src/Website.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Header, Form, Input, Button, Icon } from \"semantic-ui-react\";\nlet endpoint = \"http://34.239.125.132:8080\";\n\nclass WebsiteChecker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      alert(\"ON submit\");\n      let {\n        URL,\n        checkInterval\n      } = this.state; // console.log(\"pRINTING task\", this.state.task);\n\n      if (URL && checkInterval) {\n        axios.post(endpoint + \"/register\", {\n          URL,\n          checkInterval,\n          method: \"GET\",\n          expectedStatusCode: 200\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => {\n          this.getWebsites();\n          this.setState({\n            URL: \"\",\n            checkInterval: \"\"\n          });\n          console.log(res);\n        });\n      } else {\n        alert(\"URL or Interval is missing\");\n      }\n    };\n\n    this.getWebsites = () => {\n      axios.get(endpoint + \"/websites\").then(res => {\n        console.log(res);\n\n        if (res.data) {\n          this.setState({\n            websites: res.data.map(item => {\n              console.log(item);\n              let color = \"yellow\";\n              return /*#__PURE__*/React.createElement(Card, {\n                key: item.ID,\n                color: color,\n                fluid: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Card.Content, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Card.Header, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  wordWrap: \"break-word\",\n                  textAlign: \"left\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }\n              }, \"Website: \", item.URL), /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  wordWrap: \"break-word\",\n                  textAlign: \"right\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }\n              }, \"Interval (in sec): \", item.CheckInterval))), /*#__PURE__*/React.createElement(Card.Meta, {\n                textAlign: \"right\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                color: \"blue\",\n                onClick: this.getWebsiteStatus(item.ID),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }\n              }, \"Show Status\")));\n            })\n          });\n        } else {\n          this.setState({\n            websites: []\n          });\n        }\n      });\n    };\n\n    this.getWebsiteStatus = webId => {\n      console.log(\"STATUS FUNCTion\");\n      console.log(webId); // axios.get(endpoint + \"/websites\").then(res => {\n      //   console.log(res);\n      //   if (res.data) {\n      //     this.setState({\n      //       websites: res.data.map(item => {\n      //         console.log(item)\n      //         let color = \"yellow\";\n      //         return (\n      //           <Card key={item.ID} color={color} fluid>\n      //             <Card.Content>\n      //               <Card.Header>\n      //                 <div style={{ wordWrap: \"break-word\", textAlign: \"left\" }}>Website: { item.URL }</div>\n      //                 <div style={{ wordWrap: \"break-word\", textAlign: \"right\" }}>Interval (in sec): { item.CheckInterval }</div>\n      //               </Card.Header>\n      //             </Card.Content>\n      //           </Card>\n      //         );\n      //       })\n      //     });\n      //   } else {\n      //     this.setState({\n      //       websites: []\n      //     });\n      //   }\n      // });\n    };\n\n    this.updateTask = id => {\n      axios.put(endpoint + \"/api/task/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.undoTask = id => {\n      axios.put(endpoint + \"/api/undoTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.deleteTask = id => {\n      axios.delete(endpoint + \"/api/deleteTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.state = {\n      URL: \"\",\n      checkInterval: \"\",\n      websites: [],\n      websiteStatus: []\n    };\n  }\n\n  componentDidMount() {\n    this.getWebsites();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"header\",\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"Website Health Checker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"URL\",\n      onChange: this.onChange,\n      value: this.state.URL,\n      fluid: true,\n      placeholder: \"Enter URL\",\n      className: \"col-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"checkInterval\",\n      onChange: this.onChange,\n      value: this.state.checkInterval,\n      fluid: true,\n      placeholder: \"Interval\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Register Website\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, this.state.websites)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, this.state.websiteStatus)));\n  }\n\n}\n\nexport default WebsiteChecker;","map":{"version":3,"sources":["/mnt/d/projects/internal-projects/web-health-check/client/src/Website.js"],"names":["React","Component","axios","Card","Header","Form","Input","Button","Icon","endpoint","WebsiteChecker","constructor","props","onChange","event","setState","target","name","value","onSubmit","alert","URL","checkInterval","state","post","method","expectedStatusCode","headers","then","res","getWebsites","console","log","get","data","websites","map","item","color","ID","wordWrap","textAlign","CheckInterval","getWebsiteStatus","webId","updateTask","id","put","getTask","undoTask","deleteTask","delete","websiteStatus","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Header, Form, Input, Button, Icon } from \"semantic-ui-react\";\r\n\r\nlet endpoint = \"http://34.239.125.132:8080\";\r\n\r\nclass WebsiteChecker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      URL: \"\",\r\n      checkInterval: \"\",\r\n      websites: [],\r\n      websiteStatus: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWebsites();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    alert(\"ON submit\")\r\n    let { URL, checkInterval } = this.state;\r\n    // console.log(\"pRINTING task\", this.state.task);\r\n    if (URL && checkInterval) {\r\n      axios\r\n        .post(\r\n          endpoint + \"/register\",\r\n          {\r\n            URL,\r\n            checkInterval,\r\n            method: \"GET\",\r\n            expectedStatusCode: 200,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          this.getWebsites();\r\n          this.setState({\r\n            URL: \"\",\r\n            checkInterval: \"\"\r\n          });\r\n          console.log(res);\r\n        });\r\n    }else{\r\n      alert(\"URL or Interval is missing\");\r\n    }\r\n    \r\n  };\r\n\r\n  getWebsites = () => {\r\n    axios.get(endpoint + \"/websites\").then(res => {\r\n      console.log(res);\r\n      if (res.data) {\r\n        this.setState({\r\n          websites: res.data.map(item => {\r\n            console.log(item)\r\n            \r\n            let color = \"yellow\";\r\n\r\n            return (\r\n              <Card key={item.ID} color={color} fluid >\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <div style={{ wordWrap: \"break-word\", textAlign: \"left\" }}>Website: { item.URL }</div>\r\n                    <div style={{ wordWrap: \"break-word\", textAlign: \"right\" }}>Interval (in sec): { item.CheckInterval }</div>\r\n                  </Card.Header>\r\n                </Card.Content>\r\n                <Card.Meta textAlign=\"right\">\r\n                  <Button color=\"blue\" onClick={this.getWebsiteStatus(item.ID)}>Show Status</Button>\r\n                </Card.Meta>\r\n              </Card>\r\n            );\r\n          })\r\n        });\r\n      } else {\r\n        this.setState({\r\n          websites: []\r\n        });\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  getWebsiteStatus = (webId) => {\r\n    console.log(\"STATUS FUNCTion\")\r\n    console.log(webId)\r\n    // axios.get(endpoint + \"/websites\").then(res => {\r\n    //   console.log(res);\r\n    //   if (res.data) {\r\n    //     this.setState({\r\n    //       websites: res.data.map(item => {\r\n    //         console.log(item)\r\n            \r\n    //         let color = \"yellow\";\r\n\r\n    //         return (\r\n    //           <Card key={item.ID} color={color} fluid>\r\n    //             <Card.Content>\r\n    //               <Card.Header>\r\n    //                 <div style={{ wordWrap: \"break-word\", textAlign: \"left\" }}>Website: { item.URL }</div>\r\n    //                 <div style={{ wordWrap: \"break-word\", textAlign: \"right\" }}>Interval (in sec): { item.CheckInterval }</div>\r\n    //               </Card.Header>\r\n                  \r\n    //             </Card.Content>\r\n    //           </Card>\r\n    //         );\r\n    //       })\r\n    //     });\r\n    //   } else {\r\n    //     this.setState({\r\n    //       websites: []\r\n    //     });\r\n    //   }\r\n\r\n    // });\r\n  };\r\n\r\n  updateTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/task/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  undoTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/undoTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  deleteTask = id => {\r\n    axios\r\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <Header className=\"header\" as=\"h2\">\r\n            Website Health Checker\r\n          </Header>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"URL\"\r\n              onChange={this.onChange}\r\n              value={this.state.URL}\r\n              fluid\r\n              placeholder=\"Enter URL\"\r\n              className=\"col-50\"\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              name=\"checkInterval\"\r\n              onChange={this.onChange}\r\n              value={this.state.checkInterval}\r\n              fluid\r\n              placeholder=\"Interval\"\r\n            />\r\n            <Button color=\"blue\">Register Website</Button>\r\n          </Form>\r\n        </div>\r\n        <hr></hr>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.websites}</Card.Group>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.websiteStatus}</Card.Group>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebsiteChecker;\r\n"]},"metadata":{},"sourceType":"module"}