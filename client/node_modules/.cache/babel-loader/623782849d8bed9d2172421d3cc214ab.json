{"ast":null,"code":"var _jsxFileName = \"/mnt/d/projects/internal-projects/web-health-check/client/src/Website.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Header, Form, Input, Button } from \"semantic-ui-react\";\nlet endpoint = \"http://34.239.125.132:8080\";\n\nclass WebsiteChecker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      alert(\"ON submit\");\n      let {\n        URL,\n        checkInterval\n      } = this.state; // console.log(\"pRINTING task\", this.state.task);\n\n      if (URL && checkInterval) {\n        axios.post(endpoint + \"/register\", {\n          URL,\n          checkInterval,\n          method: \"GET\",\n          expectedStatusCode: 200\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => {\n          this.getWebsites();\n          this.setState({\n            URL: \"\",\n            checkInterval: \"\"\n          });\n          console.log(res);\n        });\n      } else {\n        alert(\"URL or Interval is missing\");\n      }\n    };\n\n    this.getWebsites = () => {\n      axios.get(endpoint + \"/websites\").then(res => {\n        console.log(res); // axios.get(endpoint + \"/website/\" + item[\"ID\"]).then(statusRes => {});\n\n        if (res.data) {\n          this.setState({\n            websites: res.data.map(item => {\n              console.log(item);\n              let color = \"yellow\";\n              return /*#__PURE__*/React.createElement(Card, {\n                key: item.ID,\n                color: color,\n                fluid: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Card.Content, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Card.Header, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  wordWrap: \"break-word\",\n                  textAlign: \"left\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }\n              }, item.URL), /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  wordWrap: \"break-word\",\n                  textAlign: \"left\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }\n              }, item.checkInterval))));\n            })\n          });\n        } else {\n          this.setState({\n            websites: []\n          });\n        }\n      });\n    };\n\n    this.updateTask = id => {\n      axios.put(endpoint + \"/api/task/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.undoTask = id => {\n      axios.put(endpoint + \"/api/undoTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.deleteTask = id => {\n      axios.delete(endpoint + \"/api/deleteTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.state = {\n      URL: \"\",\n      checkInterval: \"\",\n      websites: []\n    };\n  }\n\n  componentDidMount() {\n    this.getWebsites();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"header\",\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Website Health Checker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"URL\",\n      onChange: this.onChange,\n      value: this.state.URL,\n      fluid: true,\n      placeholder: \"Enter URL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"checkInterval\",\n      onChange: this.onChange,\n      value: this.state.checkInterval,\n      fluid: true,\n      placeholder: \"Interval\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Register Website\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, this.state.websites)));\n  }\n\n}\n\nexport default WebsiteChecker;","map":{"version":3,"sources":["/mnt/d/projects/internal-projects/web-health-check/client/src/Website.js"],"names":["React","Component","axios","Card","Header","Form","Input","Button","endpoint","WebsiteChecker","constructor","props","onChange","event","setState","target","name","value","onSubmit","alert","URL","checkInterval","state","post","method","expectedStatusCode","headers","then","res","getWebsites","console","log","get","data","websites","map","item","color","ID","wordWrap","textAlign","updateTask","id","put","getTask","undoTask","deleteTask","delete","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Header, Form, Input, Button } from \"semantic-ui-react\";\r\n\r\nlet endpoint = \"http://34.239.125.132:8080\";\r\n\r\nclass WebsiteChecker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      URL: \"\",\r\n      checkInterval: \"\",\r\n      websites: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWebsites();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    alert(\"ON submit\")\r\n    let { URL, checkInterval } = this.state;\r\n    // console.log(\"pRINTING task\", this.state.task);\r\n    if (URL && checkInterval) {\r\n      axios\r\n        .post(\r\n          endpoint + \"/register\",\r\n          {\r\n            URL,\r\n            checkInterval,\r\n            method: \"GET\",\r\n            expectedStatusCode: 200,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          this.getWebsites();\r\n          this.setState({\r\n            URL: \"\",\r\n            checkInterval: \"\"\r\n          });\r\n          console.log(res);\r\n        });\r\n    }else{\r\n      alert(\"URL or Interval is missing\");\r\n    }\r\n    \r\n  };\r\n\r\n  getWebsites = () => {\r\n    axios.get(endpoint + \"/websites\").then(res => {\r\n      console.log(res);\r\n      // axios.get(endpoint + \"/website/\" + item[\"ID\"]).then(statusRes => {});\r\n      if (res.data) {\r\n        this.setState({\r\n          websites: res.data.map(item => {\r\n            console.log(item)\r\n            \r\n            let color = \"yellow\";\r\n\r\n            return (\r\n              <Card key={item.ID} color={color} fluid>\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <div style={{ wordWrap: \"break-word\", textAlign: \"left\" }}>{ item.URL }</div>\r\n                    <div style={{ wordWrap: \"break-word\", textAlign: \"left\" }}>{ item.checkInterval }</div>\r\n                  </Card.Header>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          })\r\n        });\r\n      } else {\r\n        this.setState({\r\n          websites: []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/task/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  undoTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/undoTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  deleteTask = id => {\r\n    axios\r\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <Header className=\"header\" as=\"h2\">\r\n            Website Health Checker\r\n          </Header>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"URL\"\r\n              onChange={this.onChange}\r\n              value={this.state.URL}\r\n              fluid\r\n              placeholder=\"Enter URL\"\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              name=\"checkInterval\"\r\n              onChange={this.onChange}\r\n              value={this.state.checkInterval}\r\n              fluid\r\n              placeholder=\"Interval\"\r\n            />\r\n            <Button >Register Website</Button>\r\n          </Form>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.websites}</Card.Group>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebsiteChecker;\r\n"]},"metadata":{},"sourceType":"module"}